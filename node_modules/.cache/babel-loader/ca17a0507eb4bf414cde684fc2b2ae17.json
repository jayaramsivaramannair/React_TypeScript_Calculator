{"ast":null,"code":"var _jsxFileName = \"/Users/jayaramnair/Desktop/Github Repos/react_typescript_calculator/src/components/Calculator.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Button from './Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Calculator = () => {\n  _s();\n\n  const buttonKeys = ['AC', '/', 'x', '7', '8', '9', '-', '4', '5', '6', '+', '1', '2', '3', '0', '.', '='];\n  const buttonMap = {\n    AC: 'clear',\n    \"/\": 'divide',\n    '+': 'add',\n    '-': 'subtract',\n    'x': 'multiply',\n    '0': 'zero',\n    '9': 'nine',\n    '8': 'eight',\n    '7': 'seven',\n    '6': 'six',\n    '5': 'five',\n    '4': 'four',\n    '3': 'three',\n    '2': 'two',\n    '1': 'one',\n    '.': 'decimal'\n  }; //const [result, setResult] = useState<number>(0);\n\n  const [operations, setOperations] = useState([]);\n  const [intermediate, setIntermediate] = useState({\n    firstNumberReceived: false,\n    firstNumber: \"\",\n    secondNumberReceived: false,\n    secondNumber: \"\",\n    operatorReceived: false,\n    operator: \"\"\n  });\n  const [click, setClick] = useState(\"0\");\n\n  const renderButtonList = () => {\n    return buttonKeys.map((button, idx) => {\n      return /*#__PURE__*/_jsxDEV(Button, {\n        button: button,\n        click: click,\n        setClick: setClick,\n        setOperations: setOperations,\n        operations: operations,\n        intermediate: intermediate,\n        setIntermediate: setIntermediate\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 14\n      }, this);\n    });\n  };\n\n  const displayOperations = () => {\n    return operations.join(\" \");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shell\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display display-operations\",\n      children: displayOperations()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display-results\",\n      children: click\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: renderButtonList()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Calculator, \"EvCVM5l/xazLpyVcTN3K2vCLbmg=\");\n\n_c = Calculator;\nexport default Calculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"sources":["/Users/jayaramnair/Desktop/Github Repos/react_typescript_calculator/src/components/Calculator.tsx"],"names":["React","useState","Button","Calculator","buttonKeys","buttonMap","AC","operations","setOperations","intermediate","setIntermediate","firstNumberReceived","firstNumber","secondNumberReceived","secondNumber","operatorReceived","operator","click","setClick","renderButtonList","map","button","idx","displayOperations","join"],"mappings":";;;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AACA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAMC,UAAU,GAAG,CAAC,IAAD,EAAO,GAAP,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,GAAtB,EAA2B,GAA3B,EAAgC,GAAhC,EAAqC,GAArC,EAA0C,GAA1C,EAA+C,GAA/C,EAAoD,GAApD,EAAyD,GAAzD,EAA8D,GAA9D,EAAmE,GAAnE,EAAwE,GAAxE,EAA6E,GAA7E,EAAkF,GAAlF,CAAnB;AAEA,QAAMC,SAAS,GAAG;AAChBC,IAAAA,EAAE,EAAE,OADY;AAEhB,SAAK,QAFW;AAGhB,SAAK,KAHW;AAIhB,SAAK,UAJW;AAKhB,SAAK,UALW;AAMhB,SAAK,MANW;AAOhB,SAAK,MAPW;AAQhB,SAAK,OARW;AAShB,SAAK,OATW;AAUhB,SAAK,KAVW;AAWhB,SAAK,MAXW;AAYhB,SAAK,MAZW;AAahB,SAAK,OAbW;AAchB,SAAK,KAdW;AAehB,SAAK,KAfW;AAgBhB,SAAK;AAhBW,GAAlB,CAHuB,CAsBvB;;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAY,EAAZ,CAA5C;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC;AAC/CU,IAAAA,mBAAmB,EAAE,KAD0B;AAE/CC,IAAAA,WAAW,EAAG,EAFiC;AAG/CC,IAAAA,oBAAoB,EAAE,KAHyB;AAI/CC,IAAAA,YAAY,EAAE,EAJiC;AAK/CC,IAAAA,gBAAgB,EAAE,KAL6B;AAM/CC,IAAAA,QAAQ,EAAE;AANqC,GAAD,CAAhD;AASA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAS,GAAT,CAAlC;;AAGA,QAAMkB,gBAAgB,GAAG,MAAqB;AAC5C,WAAOf,UAAU,CAACgB,GAAX,CAAe,CAACC,MAAD,EAASC,GAAT,KAAiB;AACrC,0BAAO,QAAC,MAAD;AAAkB,QAAA,MAAM,EAAED,MAA1B;AACC,QAAA,KAAK,EAAEJ,KADR;AAEC,QAAA,QAAQ,EAAEC,QAFX;AAGC,QAAA,aAAa,EAAEV,aAHhB;AAIC,QAAA,UAAU,EAAED,UAJb;AAKC,QAAA,YAAY,EAAEE,YALf;AAMC,QAAA,eAAe,EAAEC;AANlB,SAAaY,GAAb;AAAA;AAAA;AAAA;AAAA,cAAP;AAQD,KATM,CAAP;AAUD,GAXD;;AAaA,QAAMC,iBAAiB,GAAG,MAAc;AACtC,WAAOhB,UAAU,CAACiB,IAAX,CAAgB,GAAhB,CAAP;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA,gBAA6CD,iBAAiB;AAA9D;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,gBAAkCN;AAAlC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,gBACGE,gBAAgB;AADnB;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA/DD;;GAAMhB,U;;KAAAA,U;AAiEN,eAAeA,UAAf","sourcesContent":["import { stringify } from 'querystring';\nimport React, {useState} from 'react';\nimport Button from './Button';\nconst Calculator = () => {\n  const buttonKeys = ['AC', '/', 'x', '7', '8', '9', '-', '4', '5', '6', '+', '1', '2', '3', '0', '.', '=']\n\n  const buttonMap = {\n    AC: 'clear',\n    \"/\": 'divide',\n    '+': 'add',\n    '-': 'subtract',\n    'x': 'multiply',\n    '0': 'zero',\n    '9': 'nine',\n    '8': 'eight',\n    '7': 'seven',\n    '6': 'six',\n    '5': 'five',\n    '4': 'four',\n    '3': 'three',\n    '2': 'two',\n    '1': 'one',\n    '.': 'decimal',\n  }\n\n  //const [result, setResult] = useState<number>(0);\n  const [operations, setOperations] = useState<string []>([]);\n  const [intermediate, setIntermediate] = useState({\n    firstNumberReceived: false,\n    firstNumber : \"\",\n    secondNumberReceived: false,\n    secondNumber: \"\",\n    operatorReceived: false,\n    operator: \"\"\n  })\n\n  const [click, setClick] = useState<string>(\"0\");\n  \n\n  const renderButtonList = (): JSX.Element[] => {\n    return buttonKeys.map((button, idx) => {\n      return <Button key={idx} button={button}\n              click={click}\n              setClick={setClick}\n              setOperations={setOperations} \n              operations={operations}\n              intermediate={intermediate}\n              setIntermediate={setIntermediate}/>\n              \n    })\n  }\n\n  const displayOperations = (): string => {\n    return operations.join(\" \");\n  }\n  \n  return (\n    <div className=\"shell\">\n      <div className=\"display display-operations\">{displayOperations()}</div>\n      <div className=\"display-results\">{click}</div>\n      <div className=\"buttons\">\n        {renderButtonList()}\n      </div>\n    </div>\n  )\n\n}\n\nexport default Calculator;"]},"metadata":{},"sourceType":"module"}