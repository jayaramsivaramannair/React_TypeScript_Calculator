{"ast":null,"code":"var _jsxFileName = \"/Users/jayaramnair/Desktop/Github Repos/react_typescript_calculator/src/components/Calculator.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Button from './Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Calculator = () => {\n  _s();\n\n  const buttonKeys = ['AC', '/', 'x', '7', '8', '9', '-', '4', '5', '6', '+', '1', '2', '3', '0', '.', '=']; //const [result, setResult] = useState<number>(0);\n\n  const [operations, setOperations] = useState([]);\n  const [idName, setIDName] = useState('');\n  const [intermediate, setIntermediate] = useState({\n    firstNumberReceived: false,\n    firstNumber: \"\",\n    secondNumberReceived: false,\n    secondNumber: \"\",\n    operatorReceived: false,\n    operator: \"\"\n  });\n  const [click, setClick] = useState(\"0\");\n\n  const renderButtonList = () => {\n    return buttonKeys.map((button, idx) => {\n      return /*#__PURE__*/_jsxDEV(Button, {\n        button: button,\n        click: click,\n        setClick: setClick,\n        setOperations: setOperations,\n        operations: operations,\n        intermediate: intermediate,\n        setIntermediate: setIntermediate\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 14\n      }, this);\n    });\n  };\n\n  const displayOperations = () => {\n    return operations.join(\" \");\n  };\n\n  const generateClassName = keyValue => {\n    let identifier = '';\n\n    switch (keyValue) {\n      case 'AC':\n        identifier = 'clear';\n        break;\n\n      case '/':\n        identifier = 'divide';\n        break;\n\n      case '+':\n        identifier = 'add';\n        break;\n\n      case '-':\n        identifier = 'subtract';\n        break;\n\n      case 'x':\n        identifier = 'multiply';\n        break;\n\n      case '0':\n        identifier = 'zero';\n        break;\n\n      case '9':\n        identifier = 'nine';\n        break;\n\n      case '8':\n        identifier = 'eight';\n        break;\n\n      case '7':\n        identifier = 'seven';\n        break;\n\n      case '6':\n        identifier = 'six';\n        break;\n\n      case '5':\n        identifier = 'five';\n        break;\n\n      case '4':\n        identifier = 'four';\n        break;\n\n      case '3':\n        identifier = 'three';\n        break;\n\n      case '2':\n        identifier = 'two';\n        break;\n\n      case '1':\n        identifier = 'one';\n        break;\n\n      case '.':\n        identifier = 'decimal';\n        break;\n    }\n\n    return identifier;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shell\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display display-operations\",\n      children: displayOperations()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display-results\",\n      children: click\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: renderButtonList()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Calculator, \"phRQYsdxpPlIoo17hqKhgqyGfQo=\");\n\n_c = Calculator;\nexport default Calculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"sources":["/Users/jayaramnair/Desktop/Github Repos/react_typescript_calculator/src/components/Calculator.tsx"],"names":["React","useState","Button","Calculator","buttonKeys","operations","setOperations","idName","setIDName","intermediate","setIntermediate","firstNumberReceived","firstNumber","secondNumberReceived","secondNumber","operatorReceived","operator","click","setClick","renderButtonList","map","button","idx","displayOperations","join","generateClassName","keyValue","identifier"],"mappings":"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","sourcesContent":["\nimport React, {useState} from 'react';\nimport Button from './Button';\nconst Calculator = () => {\n  const buttonKeys = ['AC', '/', 'x', '7', '8', '9', '-', '4', '5', '6', '+', '1', '2', '3', '0', '.', '=']\n\n  //const [result, setResult] = useState<number>(0);\n  const [operations, setOperations] = useState<string []>([]);\n  const [idName, setIDName] = useState('')\n  const [intermediate, setIntermediate] = useState({\n    firstNumberReceived: false,\n    firstNumber : \"\",\n    secondNumberReceived: false,\n    secondNumber: \"\",\n    operatorReceived: false,\n    operator: \"\"\n  })\n\n  const [click, setClick] = useState<string>(\"0\");\n  \n\n  const renderButtonList = (): JSX.Element[] => {\n    return buttonKeys.map((button: string, idx: number) => {\n      return <Button key={idx} button={button}\n              click={click}\n              setClick={setClick}\n              setOperations={setOperations} \n              operations={operations}\n              intermediate={intermediate}\n              setIntermediate={setIntermediate}/>\n              \n    })\n  }\n\n  const displayOperations = (): string => {\n    return operations.join(\" \");\n  }\n\n  const generateClassName = (keyValue: string) : string => {\n      let identifier = ''\n      switch(keyValue) {\n        case 'AC':\n          identifier = 'clear'\n          break\n        case '/':\n          identifier = 'divide'\n          break\n        case '+':\n          identifier = 'add'\n          break\n          \n        case '-':\n          identifier = 'subtract'\n          break\n        case 'x':\n          identifier = 'multiply'\n          break\n        case '0':\n          identifier = 'zero'\n          break\n        case '9':\n          identifier = 'nine'\n          break\n        case '8':\n          identifier = 'eight'\n          break\n        case '7':\n          identifier = 'seven'\n          break\n        case '6':\n          identifier = 'six'\n          break\n        case '5':\n          identifier = 'five'\n          break\n        case '4':\n          identifier = 'four'\n          break\n        case '3':\n          identifier = 'three'\n          break\n        case '2':\n          identifier = 'two'\n          break\n        case '1':\n          identifier = 'one'\n          break\n        case '.':\n          identifier = 'decimal'\n          break\n      }\n\n      return identifier\n  }\n  \n  return (\n    <div className=\"shell\">\n      <div className=\"display display-operations\">{displayOperations()}</div>\n      <div className=\"display-results\">{click}</div>\n      <div className=\"buttons\">\n        {renderButtonList()}\n      </div>\n    </div>\n  )\n\n}\n\nexport default Calculator;"]},"metadata":{},"sourceType":"module"}