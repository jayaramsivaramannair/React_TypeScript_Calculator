{"ast":null,"code":"var _jsxFileName = \"/Users/jayaramnair/Desktop/Github Repos/react_typescript_calculator/src/components/Button.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n//Button is a functional component which deals with buttonProps\nconst Button = _ref => {\n  let {\n    button,\n    setOperations,\n    operations,\n    setClick,\n    intermediate,\n    setIntermediate\n  } = _ref;\n\n  const clickHandlerFunction = event => {\n    event.preventDefault(); //Clear the error message from the array\n\n    if (operations[0] === \"Error\") {\n      setOperations([]);\n    } //Check if the first button in a sequence of opearations is invalid or not\n\n\n    if (operations[0] === \"/\" || operations[0] === \"x\") {\n      setOperations([\"Error\"]);\n      setClick(\"0\");\n      return;\n    } //Clear the results\n\n\n    if (button === 'AC') {\n      setClick(\"0\");\n      setOperations([]);\n      return;\n    }\n\n    setOperations([...operations, button]);\n    setClick(button);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `button button-${button}`,\n    onClick: clickHandlerFunction,\n    children: button\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Button;\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/Users/jayaramnair/Desktop/Github Repos/react_typescript_calculator/src/components/Button.tsx"],"names":["React","Button","button","setOperations","operations","setClick","intermediate","setIntermediate","clickHandlerFunction","event","preventDefault"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;;;AA8BA;AACA,MAAMC,MAA6B,GAAG,QAAkF;AAAA,MAAjF;AAACC,IAAAA,MAAD;AAASC,IAAAA,aAAT;AAAwBC,IAAAA,UAAxB;AAAoCC,IAAAA,QAApC;AAA8CC,IAAAA,YAA9C;AAA4DC,IAAAA;AAA5D,GAAiF;;AAEtH,QAAMC,oBAAoB,GAAIC,KAAD,IAAwD;AAEnFA,IAAAA,KAAK,CAACC,cAAN,GAFmF,CAInF;;AACA,QAAGN,UAAU,CAAC,CAAD,CAAV,KAAkB,OAArB,EAA8B;AAC5BD,MAAAA,aAAa,CAAC,EAAD,CAAb;AACD,KAPkF,CASnF;;;AACA,QAAGC,UAAU,CAAC,CAAD,CAAV,KAAkB,GAAlB,IAAyBA,UAAU,CAAC,CAAD,CAAV,KAAkB,GAA9C,EAAmD;AACjDD,MAAAA,aAAa,CAAC,CAAC,OAAD,CAAD,CAAb;AACAE,MAAAA,QAAQ,CAAC,GAAD,CAAR;AACA;AACD,KAdkF,CAgBnF;;;AACA,QAAIH,MAAM,KAAK,IAAf,EAAqB;AACnBG,MAAAA,QAAQ,CAAC,GAAD,CAAR;AACAF,MAAAA,aAAa,CAAC,EAAD,CAAb;AACA;AACD;;AAEDA,IAAAA,aAAa,CAAC,CAAC,GAAGC,UAAJ,EAAgBF,MAAhB,CAAD,CAAb;AACAG,IAAAA,QAAQ,CAACH,MAAD,CAAR;AACD,GAzBD;;AA0BA,sBACE;AAAK,IAAA,SAAS,EAAI,iBAAgBA,MAAO,EAAzC;AAA4C,IAAA,OAAO,EAAEM,oBAArD;AAAA,cACGN;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAjCD;;KAAMD,M;AAmCN,eAAeA,MAAf","sourcesContent":["import { setUncaughtExceptionCaptureCallback } from 'node:process';\nimport React from 'react';\n\ninterface buttonProps {\n  button : string\n  click: string\n  key : number\n  operations: string[]\n  intermediate: {\n    firstNumberReceived: boolean,\n    firstNumber : string,\n    secondNumberReceived: boolean,\n    secondNumber: string,\n    operatorReceived: boolean,\n    operator: string\n  }\n\n  setIntermediate: React.Dispatch<React.SetStateAction<{\n    firstNumberReceived: boolean,\n    firstNumber : string,\n    secondNumberReceived: boolean,\n    secondNumber: string,\n    operatorReceived: boolean,\n    operator: string}>>\n\n  setClick: React.Dispatch<React.SetStateAction<string>>\n  setOperations: React.Dispatch<React.SetStateAction<string[]>>\n}\n\n\n\n//Button is a functional component which deals with buttonProps\nconst Button: React.FC<buttonProps> = ({button, setOperations, operations, setClick, intermediate, setIntermediate}) => {\n\n  const clickHandlerFunction = (event: React.MouseEvent<HTMLDivElement, MouseEvent>)=> {\n\n    event.preventDefault();\n\n    //Clear the error message from the array\n    if(operations[0] === \"Error\") {\n      setOperations([])\n    }\n\n    //Check if the first button in a sequence of opearations is invalid or not\n    if(operations[0] === \"/\" || operations[0] === \"x\") {\n      setOperations([\"Error\"])\n      setClick(\"0\")\n      return \n    }\n\n    //Clear the results\n    if (button === 'AC') {\n      setClick(\"0\")\n      setOperations([])\n      return \n    }\n\n    setOperations([...operations, button])\n    setClick(button)\n  }\n  return (\n    <div className ={`button button-${button}`} onClick={clickHandlerFunction}>\n      {button}\n    </div>\n  )\n}\n\nexport default Button;"]},"metadata":{},"sourceType":"module"}