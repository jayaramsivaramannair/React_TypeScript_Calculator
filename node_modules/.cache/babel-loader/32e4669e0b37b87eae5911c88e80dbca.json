{"ast":null,"code":"var _jsxFileName = \"/Users/jayaramnair/Desktop/Github Repos/react_typescript_calculator/src/components/Button.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n//Button is a functional component which deals with buttonProps\nconst Button = _ref => {\n  let {\n    button,\n    setOperations,\n    operations,\n    setClick\n  } = _ref;\n\n  const clickHandlerFunction = event => {\n    event.preventDefault(); //Check if the first button in a sequence of opearations is invalid or not\n\n    if (button === \"/\" || button === \"x\") {\n      setOperations([\"Error\"]);\n      setClick(\"0\");\n      return;\n    } //Clear the results\n\n\n    if (button === 'AC') {\n      setClick(\"0\");\n      setOperations([]);\n      return;\n    }\n\n    setOperations([...operations, button]);\n    setClick(button);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `button button-${button}`,\n    onClick: clickHandlerFunction,\n    children: button\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Button;\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/Users/jayaramnair/Desktop/Github Repos/react_typescript_calculator/src/components/Button.tsx"],"names":["React","Button","button","setOperations","operations","setClick","clickHandlerFunction","event","preventDefault"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;;;AAaA;AACA,MAAMC,MAA6B,GAAG,QAAmD;AAAA,MAAlD;AAACC,IAAAA,MAAD;AAASC,IAAAA,aAAT;AAAwBC,IAAAA,UAAxB;AAAoCC,IAAAA;AAApC,GAAkD;;AAEvF,QAAMC,oBAAoB,GAAIC,KAAD,IAAwD;AAEnFA,IAAAA,KAAK,CAACC,cAAN,GAFmF,CAInF;;AACA,QAAGN,MAAM,KAAK,GAAX,IAAkBA,MAAM,KAAK,GAAhC,EAAqC;AACnCC,MAAAA,aAAa,CAAC,CAAC,OAAD,CAAD,CAAb;AACAE,MAAAA,QAAQ,CAAC,GAAD,CAAR;AACA;AACD,KATkF,CAWnF;;;AACA,QAAIH,MAAM,KAAK,IAAf,EAAqB;AACnBG,MAAAA,QAAQ,CAAC,GAAD,CAAR;AACAF,MAAAA,aAAa,CAAC,EAAD,CAAb;AACA;AACD;;AAEDA,IAAAA,aAAa,CAAC,CAAC,GAAGC,UAAJ,EAAgBF,MAAhB,CAAD,CAAb;AACAG,IAAAA,QAAQ,CAACH,MAAD,CAAR;AACD,GApBD;;AAqBA,sBACE;AAAK,IAAA,SAAS,EAAI,iBAAgBA,MAAO,EAAzC;AAA4C,IAAA,OAAO,EAAEI,oBAArD;AAAA,cACGJ;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA5BD;;KAAMD,M;AA8BN,eAAeA,MAAf","sourcesContent":["import { setUncaughtExceptionCaptureCallback } from 'node:process';\nimport React from 'react';\n\ninterface buttonProps {\n  button : string\n  click: string\n  key : number\n  operations: string[]\n  setClick: React.Dispatch<React.SetStateAction<string>>\n  setOperations: React.Dispatch<React.SetStateAction<string[]>>\n}\n\n\n\n//Button is a functional component which deals with buttonProps\nconst Button: React.FC<buttonProps> = ({button, setOperations, operations, setClick}) => {\n\n  const clickHandlerFunction = (event: React.MouseEvent<HTMLDivElement, MouseEvent>)=> {\n\n    event.preventDefault();\n\n    //Check if the first button in a sequence of opearations is invalid or not\n    if(button === \"/\" || button === \"x\") {\n      setOperations([\"Error\"])\n      setClick(\"0\")\n      return \n    }\n\n    //Clear the results\n    if (button === 'AC') {\n      setClick(\"0\")\n      setOperations([])\n      return \n    }\n\n    setOperations([...operations, button])\n    setClick(button)\n  }\n  return (\n    <div className ={`button button-${button}`} onClick={clickHandlerFunction}>\n      {button}\n    </div>\n  )\n}\n\nexport default Button;"]},"metadata":{},"sourceType":"module"}