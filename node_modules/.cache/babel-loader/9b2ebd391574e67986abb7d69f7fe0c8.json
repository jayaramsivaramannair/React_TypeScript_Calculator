{"ast":null,"code":"var _jsxFileName = \"/Users/jayaramnair/Desktop/Github Repos/react_typescript_calculator/src/components/Button.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n//Button is a functional component which deals with buttonProps\nconst Button = _ref => {\n  let {\n    button,\n    setResult,\n    setOperations,\n    operations,\n    setClick\n  } = _ref;\n\n  const performCalculations = () => {\n    let calculation = 0;\n    let firstNumber = 0;\n    let operator = \"\";\n    let secondNumber = 0; //watches for negative number\n\n    let negation = false; //watches for operation\n\n    let receivedOperation = false;\n\n    for (let i = 0; i < operations.length; i++) {\n      //If the first button clicked is division or multiplication then set the result to 0 as operation is invalid\n      if (i === 0 && (operations[i] === \"/\" || operations[i] === \"x\")) {\n        calculation = -1;\n        break;\n      }\n    }\n\n    return calculation;\n  };\n\n  const clickHandlerFunction = event => {\n    if (button === 'AC') {\n      setClick(\"0\");\n      setOperations([]);\n      return;\n    }\n\n    event.preventDefault();\n\n    if (button === \"=\") {\n      setClick(performCalculations().toString());\n      setOperations([...operations, button, performCalculations().toString()]);\n      return;\n    }\n\n    setOperations([...operations, button]);\n    setClick(button);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `button button-${button}`,\n    onClick: clickHandlerFunction,\n    children: button\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Button;\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/Users/jayaramnair/Desktop/Github Repos/react_typescript_calculator/src/components/Button.tsx"],"names":["React","Button","button","setResult","setOperations","operations","setClick","performCalculations","calculation","firstNumber","operator","secondNumber","negation","receivedOperation","i","length","clickHandlerFunction","event","preventDefault","toString"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;;;AAcA;AACA,MAAMC,MAA6B,GAAG,QAA8D;AAAA,MAA7D;AAACC,IAAAA,MAAD;AAASC,IAAAA,SAAT;AAAoBC,IAAAA,aAApB;AAAmCC,IAAAA,UAAnC;AAA+CC,IAAAA;AAA/C,GAA6D;;AAElG,QAAMC,mBAAmB,GAAG,MAAe;AACzC,QAAIC,WAAW,GAAG,CAAlB;AACA,QAAIC,WAAW,GAAG,CAAlB;AACA,QAAIC,QAAQ,GAAG,EAAf;AACA,QAAIC,YAAY,GAAG,CAAnB,CAJyC,CAKzC;;AACA,QAAIC,QAAQ,GAAG,KAAf,CANyC,CAQzC;;AACA,QAAIC,iBAAiB,GAAG,KAAxB;;AAEA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGT,UAAU,CAACU,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACzC;AACA,UAAIA,CAAC,KAAK,CAAN,KAAYT,UAAU,CAACS,CAAD,CAAV,KAAkB,GAAlB,IAAyBT,UAAU,CAACS,CAAD,CAAV,KAAkB,GAAvD,CAAJ,EAAiE;AAC/DN,QAAAA,WAAW,GAAG,CAAC,CAAf;AACA;AACD;AACF;;AAED,WAAOA,WAAP;AACD,GApBD;;AAsBA,QAAMQ,oBAAoB,GAAIC,KAAD,IAAwD;AACnF,QAAIf,MAAM,KAAK,IAAf,EAAqB;AACnBI,MAAAA,QAAQ,CAAC,GAAD,CAAR;AACAF,MAAAA,aAAa,CAAC,EAAD,CAAb;AACA;AACD;;AAEDa,IAAAA,KAAK,CAACC,cAAN;;AAGA,QAAIhB,MAAM,KAAK,GAAf,EAAoB;AAClBI,MAAAA,QAAQ,CAACC,mBAAmB,GAAGY,QAAtB,EAAD,CAAR;AACAf,MAAAA,aAAa,CAAC,CAAC,GAAGC,UAAJ,EAAgBH,MAAhB,EAAwBK,mBAAmB,GAAGY,QAAtB,EAAxB,CAAD,CAAb;AACA;AACD;;AACDf,IAAAA,aAAa,CAAC,CAAC,GAAGC,UAAJ,EAAgBH,MAAhB,CAAD,CAAb;AACAI,IAAAA,QAAQ,CAACJ,MAAD,CAAR;AACD,GAjBD;;AAkBA,sBACE;AAAK,IAAA,SAAS,EAAI,iBAAgBA,MAAO,EAAzC;AAA4C,IAAA,OAAO,EAAEc,oBAArD;AAAA,cACGd;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA/CD;;KAAMD,M;AAiDN,eAAeA,MAAf","sourcesContent":["import { setUncaughtExceptionCaptureCallback } from 'node:process';\nimport React from 'react';\n\ninterface buttonProps {\n  button : string\n  click: string\n  key : number\n  operations: string[]\n  setClick: React.Dispatch<React.SetStateAction<string>>\n  setResult: React.Dispatch<React.SetStateAction<number>>\n  setOperations: React.Dispatch<React.SetStateAction<string[]>>\n}\n\n\n\n//Button is a functional component which deals with buttonProps\nconst Button: React.FC<buttonProps> = ({button, setResult, setOperations, operations, setClick}) => {\n\n  const performCalculations = () : number => {\n    let calculation = 0\n    let firstNumber = 0\n    let operator = \"\"\n    let secondNumber = 0\n    //watches for negative number\n    let negation = false\n\n    //watches for operation\n    let receivedOperation = false\n\n    for(let i = 0; i < operations.length; i++) {\n      //If the first button clicked is division or multiplication then set the result to 0 as operation is invalid\n      if (i === 0 && (operations[i] === \"/\" || operations[i] === \"x\")) {\n        calculation = -1\n        break\n      }\n    }\n\n    return calculation\n  }\n\n  const clickHandlerFunction = (event: React.MouseEvent<HTMLDivElement, MouseEvent>)=> {\n    if (button === 'AC') {\n      setClick(\"0\")\n      setOperations([])\n      return \n    }\n\n    event.preventDefault();\n    \n\n    if (button === \"=\") {\n      setClick(performCalculations().toString())\n      setOperations([...operations, button, performCalculations().toString()])\n      return\n    }\n    setOperations([...operations, button])\n    setClick(button)\n  }\n  return (\n    <div className ={`button button-${button}`} onClick={clickHandlerFunction}>\n      {button}\n    </div>\n  )\n}\n\nexport default Button;"]},"metadata":{},"sourceType":"module"}